#if !defined(__LEXEM_DESCRIPTION_INCLUDED__)
#define __LEXEM_DESCRIPTION_INCLUDED__

#define lexJava_letters		"java_letters_lex"
#define lexJava_digits		"java_digits_lex"
#define lexChar_inline_10_13 "char_inline_10_13_lex"
#define lexNot_star			"not_star_lex"
#define lexNot_star_not_slash "not_star_not_slash_lex"
#define lexInput_char_39_92 "input_char_39_92_lex"
#define lexInput_char_34_92 "input_char_34_92_lex"
#define lexSpacer			"spacer_lex"
#define lexHex_digit		"hex_digit_lex"
#define lexOctal_digit		"octal_digit_lex"
#define lexDecimal_digit	"decimal_digit_lex"
#define lexDecimal_nozero_digit "decimal_nozero_digit_lex"
#define lexHex_prefix		"hex_prefix_lex"
#define lexInteger_type_suffix "integer_type_suffix_lex"
#define lexFloat_type_suffix "float_type_suffix_lex"
#define lexExponent_part	 "exponent_part_lex"
#define lexZero_to_three	"zero_to_three_lex"
#define lexOctal_escape		"octal_escape_lex"
#define lexOctal_escape_string "octal_escape_string_lex"
#define lexEscape_seq		"escape_seq_lex"
#define lexUnicode			"unicode_lex"
#define lexComment_end_line "comment_end_line_lex"
#define lexComment_classic	"comment_classic_lex"
#define lexWhite_space		"white_space_lex"
#define lexAbstract_key		"abstract_key_lex"
#define lexBoolean_key		"boolean_key_lex"
#define lexBreak_key		"break_key_lex"
#define lexByte_key			"byte_key_lex"
#define lexCase_key    		"case_key_lex"
#define lexCast_key    		"cast_key_lex"
#define lexCatch_key    	"catch_key_lex"
#define lexChar_key    		"char_key_lex"
#define lexClass_key    	"class_key_lex"
#define lexConst_key    	"const_key_lex"
#define lexConstructor_key     "constructor_key_lex"	
#define lexContinue_key    	"continue_key_lex"
#define lexDefault_key    	"default_key_lex"
#define lexDo_key    		"do_key_lex"
#define lexDouble_key    	"double_key_lex"
#define lexElse_key    		"else_key_lex"
#define lexExtends_key    	"extends_key_lex"
#define lexFinal_key    	"final_key_lex"
#define lexFinally_key    	"finally_key_lex"
#define lexFloat_key    	"float_key_lex"
#define lexFor_key    		"for_key_lex"
#define lexGoto_key    		"goto_key_lex"
#define lexIf_key    		"if_key_lex"
#define lexImplements_key     "implements_key_lex"
#define lexImport_key    	"import_key_lex"
#define lexInstanceof_key     "instanceof_key_lex"
#define lexInt_key    		"int_key_lex"
#define lexInterface_key     "interface_key_lex"
#define lexLabel_key    	"label_key_lex"
#define lexLocal_key    	"local_key_lex"
#define lexLong_key    		"long_key_lex"
#define lexNative_key    	"native_key_lex"
#define lexNew_key    		"new_key_lex"
#define lexPackage_key    	"package_key_lex"
#define lexPrivate_key    	"private_key_lex"
#define lexProtected_key     "protected_key_lex"
#define lexPublic_key    	"public_key_lex"
#define lexReturn_key    	"return_key_lex"
#define lexShort_key    	"short_key_lex"
#define lexStatic_key    	"static_key_lex"
#define lexStrictfp_key     "strictfp_key_lex"
#define lexSuper_key    	"super_key_lex"
#define lexSwitch_key    	"switch_key_lex"
#define lexSynchronized_key     "synchronized_key_lex"
#define lexSynchexec_key     "synchexec_key_lex"
#define lexThis_key    		"this_key_lex"
#define lexThrow_key    	"throw_key_lex"
#define lexThrows_key    	"throws_key_lex"
#define lexTransient_key     "transient_key_lex"
#define lexTry_key    		"try_key_lex"
#define lexVoid_key    		"void_key_lex"
#define lexVolatile_key     "volatile_key_lex"
#define lexWhile_key    	"while_key_lex"
#define lexDecimal_integer_literal     "decimal_integer_literal_lex"
#define lexHex_integer_literal     "hex_integer_literal_lex"
#define lexOctal_integer_literal     "octal_integer_literal_lex"
#define lexFloating_point_literal1     "floating_point_literal1_lex"
#define lexFloating_point_literal2     "floating_point_literal2_lex"
#define lexFloating_point_literal3     "floating_point_literal3_lex"
#define lexFloating_point_literal4     "floating_point_literal4_lex"
#define lexBoolean_literal     "boolean_literal_lex"
#define lexChar_literal    	"char_literal_lex"
#define lexNull_literal     "null_literal_lex"
#define lexSco1    			"sco1_lex"
#define lexSco2    			"sco2_lex"
#define lexSco1f    		"sco1f_lex"
#define lexSco2f    		"sco2f_lex"
#define lexSco1k    		"sco1k_lex"
#define lexSco2k    		"sco2k_lex"
#define lexDot_z    		"dot_z_lex"
#define lexZ    			"z_lex"
#define lexDot    			"dot_lex"
#define lexString_literal     "string_literal_lex"
#define lexOperator1    	"operator1_lex"
#define lexOperator2    	"operator2_lex"
#define lexOperator3    	"operator3_lex"
#define lexOperator4    	"operator4_lex"
#define lexOperator5    	"operator5_lex"
#define lexOperator6    	"operator6_lex"
#define lexOperator7    	"operator7_lex"
#define lexOperator8    	"operator8_lex"
#define lexOperator9    	"operator9_lex"
#define lexOperator10    	"operator10_lex"
#define lexOperator11    	"operator11_lex"
#define lexOperator12    	"operator12_lex"
#define lexOperator13    	"operator13_lex"
#define lexOperator14    	"operator14_lex"
#define lexOperator15    	"operator15_lex"
#define lexOperator16    	"operator16_lex"
#define lexOperator17    	"operator17_lex"
#define lexOperator18    	"operator18_lex"
#define lexOperator19    	"operator19_lex"
#define lexOperator20    	"operator20_lex"
#define lexOperator21    	"operator21_lex"
#define lexOperator22    	"operator22_lex"
#define lexOperator23    	"operator23_lex"
#define lexOperator24    	"operator24_lex"
#define lexOperator25    	"operator25_lex"
#define lexOperator26    	"operator26_lex"
#define lexOperator27    	"operator27_lex"
#define lexOperator28    	"operator28_lex"
#define lexOperator29    	"operator29_lex"
#define lexOperator30    	"operator30_lex"
#define lexOperator31    	"operator31_lex"
#define lexOperator32    	"operator32_lex"
#define lexOperator33    	"operator33_lex"
#define lexOperator34    	"operator34_lex"
#define lexOperator35    	"operator35_lex"
#define lexOperator36    	"operator36_lex"
#define lexOperator37    	"operator37_lex"
#define lexIdentifier    	"identifier_lex"

#endif